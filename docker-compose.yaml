version: "3.8"

services:
  sonarqube:
    container_name: mySonarqube
    image: sonarqube
    depends_on:
      - postgres
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://myPostgres/myDB
      - SONAR_JDBC_USERNAME=myUser
      - SONAR_JDBC_PASSWORD=postgres
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - myBridgeNetwork

  jenkins:
    container_name: myJenkins
    image: jenkins/jenkins:lts-jdk11
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins-docker-certs:/certs/client
      - jenkins-data:/var/jenkins_home
    networks:
      - myBridgeNetwork

  nexus:
    container_name: myNexus
    image: sonatype/nexus3
    ports:
      - "8081:8081"
    volumes:
      - nexus-data:/nexus-data
    networks:
      - myBridgeNetwork

  postgres:
    container_name: myPostgres
    image: postgres:alpine
    environment:
    - POSTGRES_USER=myUser
    - POSTGRES_PASSWORD=postgres
    - POSTGRES_DB=myDB
    volumes:
    - myPostgres_volume:/var/lib/postgresql/data
    networks:
      - myBridgeNetwork

  portainer:
    container_name: myPortainer
    image: portainer/portainer-ce
    ports:
      - "127.0.0.1:9001:9000"
      - "9443:9443"
    restart: always
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - myBridgeNetwork

  python:
    container_name: myPython
    image: rayus007/python-app:0.2
    ports:
      - "5000:5000"
    build: 
      context: .
      dockerfile: Dockerfile
    networks:
      - myBridgeNetwork

volumes:
  myPostgres_volume:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  jenkins-docker-certs:
  jenkins-data:
  portainer_data:
  nexus-data:
    external: false

networks:
  myBridgeNetwork:
